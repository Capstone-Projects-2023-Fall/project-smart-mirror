"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/project-smart-mirror/docs/intro","docId":"intro"},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/project-smart-mirror/docs/requirements/system-overview","docId":"requirements/system-overview"},{"type":"link","label":"System Block Diagram","href":"/project-smart-mirror/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram"},{"type":"link","label":"General Requirements","href":"/project-smart-mirror/docs/requirements/general-requirements","docId":"requirements/general-requirements"},{"type":"link","label":"Features and Requirements","href":"/project-smart-mirror/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements"},{"type":"link","label":"Use-case descriptions","href":"/project-smart-mirror/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions"}],"href":"/project-smart-mirror/docs/category/requirements-specification"},{"type":"category","label":"Software Development Plan","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Activities","href":"/project-smart-mirror/docs/development-plan/activities","docId":"development-plan/activities"},{"type":"link","label":"Tasks","href":"/project-smart-mirror/docs/development-plan/tasks","docId":"development-plan/tasks"},{"type":"link","label":"Schedule","href":"/project-smart-mirror/docs/development-plan/schedule","docId":"development-plan/schedule"},{"type":"link","label":"Development Environment","href":"/project-smart-mirror/docs/development-plan/development-environment","docId":"development-plan/development-environment"},{"type":"link","label":"Version Control","href":"/project-smart-mirror/docs/development-plan/version-control","docId":"development-plan/version-control"}],"href":"/project-smart-mirror/docs/category/software-development-plan"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design","href":"/project-smart-mirror/docs/system-architecture/design","docId":"system-architecture/design"}],"href":"/project-smart-mirror/docs/category/system-architecture"},{"type":"category","label":"API Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Document Overview","href":"/project-smart-mirror/docs/api-specification/document-overview","docId":"api-specification/document-overview"},{"type":"link","label":"System Overview","href":"/project-smart-mirror/docs/api-specification/system-overview","docId":"api-specification/system-overview"},{"type":"link","label":"Database Schema Diagram","href":"/project-smart-mirror/docs/api-specification/Database-Schema","docId":"api-specification/Database-Schema"},{"type":"link","label":"CalculatorModel.java","href":"/project-smart-mirror/docs/api-specification/calculator-model-generated","docId":"api-specification/calculator-model-generated"},{"type":"link","label":"Health","href":"/project-smart-mirror/docs/api-specification/health-api","docId":"api-specification/health-api"},{"type":"link","label":"Calendar Module API Documentation","href":"/project-smart-mirror/docs/api-specification/calendar_api","docId":"api-specification/calendar_api"},{"type":"link","label":"Module Class API Documentation","href":"/project-smart-mirror/docs/api-specification/modules-api","docId":"api-specification/modules-api"},{"type":"link","label":"System-Core","href":"/project-smart-mirror/docs/api-specification/systemcore-api","docId":"api-specification/systemcore-api"},{"type":"link","label":"Weather Class API Documentation","href":"/project-smart-mirror/docs/api-specification/weather-api","docId":"api-specification/weather-api"}],"href":"/project-smart-mirror/docs/category/api-specification"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit tests","href":"/project-smart-mirror/docs/testing/unit-testing","docId":"testing/unit-testing"},{"type":"link","label":"Integration tests","href":"/project-smart-mirror/docs/testing/integration-testing","docId":"testing/integration-testing"},{"type":"link","label":"Acceptance test","href":"/project-smart-mirror/docs/testing/acceptence-testing","docId":"testing/acceptence-testing"}],"href":"/project-smart-mirror/docs/category/test-procedures"}]},"docs":{"api-specification/calculator-model-generated":{"id":"api-specification/calculator-model-generated","title":"CalculatorModel.java","description":"(generated using Javadoc to Markdown)","sidebar":"docsSidebar"},"api-specification/calendar_api":{"id":"api-specification/calendar_api","title":"Calendar Module API Documentation","description":"The CalendarModule is what controls the calendar functionality of the mirror.","sidebar":"docsSidebar"},"api-specification/Database-Schema":{"id":"api-specification/Database-Schema","title":"Database Schema Diagram","description":"Schema Diagram","sidebar":"docsSidebar"},"api-specification/document-overview":{"id":"api-specification/document-overview","title":"Document Overview","description":"Document Overview","sidebar":"docsSidebar"},"api-specification/health-api":{"id":"api-specification/health-api","title":"Health","description":"public class Health","sidebar":"docsSidebar"},"api-specification/modules-api":{"id":"api-specification/modules-api","title":"Module Class API Documentation","description":"Purpose:","sidebar":"docsSidebar"},"api-specification/system-overview":{"id":"api-specification/system-overview","title":"System Overview","description":"Project Abstract","sidebar":"docsSidebar"},"api-specification/systemcore-api":{"id":"api-specification/systemcore-api","title":"System-Core","description":"The system core is comprised of the System Class and the SystemUpdateHandler Class. These two work in cohesion to innitialize, maintain, and update the system.","sidebar":"docsSidebar"},"api-specification/weather-api":{"id":"api-specification/weather-api","title":"Weather Class API Documentation","description":"Purpose:","sidebar":"docsSidebar"},"development-plan/activities":{"id":"development-plan/activities","title":"Activities","description":"","sidebar":"docsSidebar"},"development-plan/development-environment":{"id":"development-plan/development-environment","title":"Development Environment","description":"","sidebar":"docsSidebar"},"development-plan/schedule":{"id":"development-plan/schedule","title":"Schedule","description":"","sidebar":"docsSidebar"},"development-plan/tasks":{"id":"development-plan/tasks","title":"Tasks","description":"","sidebar":"docsSidebar"},"development-plan/version-control":{"id":"development-plan/version-control","title":"Version Control","description":"","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"Features and Requirements","description":"Functional Requirements","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"- Raspberry Pi","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"Alt text","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"Project Abstract","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"Use-case descriptions","description":"Use Case 1 - Custom Widgets","sidebar":"docsSidebar"},"system-architecture/design":{"id":"system-architecture/design","title":"Design","description":"Purpose","sidebar":"docsSidebar"},"testing/acceptence-testing":{"id":"testing/acceptence-testing","title":"Acceptance test","description":"Demonstration of all of the functional and non-functional requirements. This can be a combination of automated tests derived from the use-cases (user stories) and manual tests with recorded observation of the results.","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration tests","description":"Tests to demonstrate each use-case based on the use-case descriptions and the sequence diagrams. External input should be provided via mock objects and results verified via mock objects. Integration tests should not require manual entry of data nor require manual interpretation of results.","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit tests","description":"For each method, one or more test cases.","sidebar":"docsSidebar"}}}')}}]);