"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[1996],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var l=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function n(e,t){if(null==e)return{};var a,l,r=function(e,t){if(null==e)return{};var a,l,r={},i=Object.keys(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=l.createContext({}),u=function(e){var t=l.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=u(e.components);return l.createElement(o.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=n(e,["components","mdxType","originalType","parentName"]),d=u(a),m=r,c=d["".concat(o,".").concat(m)]||d[m]||h[m]||i;return a?l.createElement(c,s(s({ref:t},p),{},{components:a})):l.createElement(c,s({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=m;var n={};for(var o in t)hasOwnProperty.call(t,o)&&(n[o]=t[o]);n.originalType=e,n[d]="string"==typeof e?e:r,s[1]=n;for(var u=2;u<i;u++)s[u]=a[u];return l.createElement.apply(null,s)}return l.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2680:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>u});var l=a(7462),r=(a(7294),a(3905));const i={sidebar_position:2},s="Integration tests",n={unversionedId:"testing/integration-testing",id:"testing/integration-testing",title:"Integration tests",description:"Use Case 1 - Custom Widgets",source:"@site/docs/testing/integration-testing.md",sourceDirName:"testing",slug:"/testing/integration-testing",permalink:"/project-smart-mirror/docs/testing/integration-testing",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-smart-mirror/edit/main/documentation/docs/testing/integration-testing.md",tags:[],version:"current",lastUpdatedBy:"MWilcox35",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Unit tests",permalink:"/project-smart-mirror/docs/testing/unit-testing"},next:{title:"Acceptance test",permalink:"/project-smart-mirror/docs/testing/acceptence-testing"}},o={},u=[{value:"Use Case 1 - Custom Widgets",id:"use-case-1---custom-widgets",level:2},{value:"Test Scenario :",id:"test-scenario-",level:2},{value:"Test steps:",id:"test-steps",level:2},{value:"Use Case 2 - Custom Alerts",id:"use-case-2---custom-alerts",level:2},{value:"Use Case 3 - Sub-Profiles",id:"use-case-3---sub-profiles",level:2},{value:"Use Case 4 - Height/Weight Tracking",id:"use-case-4---heightweight-tracking",level:2},{value:"Use Case 5 - Rainy Day Fit\u200b",id:"use-case-5---rainy-day-fit",level:2},{value:"Use Case 6 - To-do List",id:"use-case-6---to-do-list",level:2},{value:"Use Case 7 - Scheduling Assistant",id:"use-case-7---scheduling-assistant",level:2}],p={toc:u};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,l.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"integration-tests"},"Integration tests"),(0,r.kt)("h2",{id:"use-case-1---custom-widgets"},"Use Case 1 - Custom Widgets"),(0,r.kt)("h2",{id:"test-scenario-"},"Test Scenario :"),(0,r.kt)("p",null,"The user wants to view a custom widget on their current mirror layout so that they can view current stock quotes when they look at the mirror in the morning. "),(0,r.kt)("h2",{id:"test-steps"},"Test steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open Companion App and Navigate to Widget Section:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Open the companion app and Navigate to the Widget section of the app"),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The app interface should load successfully and a section displaying available widgets should be accessible.")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Add New Widget:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Press the Add New Widget button."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: A menu or list of available widgets should appear.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Select Stock-Related Widget:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Choose a stock-related widget from the list."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The selected widget should be highlighted or marked as chosen.")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Choose Widget Placement:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Choose the sub-profile where the widget should be added."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The selected sub-profile should be highlighted or marked."),(0,r.kt)("li",{parentName:"ul"},"Test Step: Choose the position on the mirror where the widget should be placed."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The selected position should be highlighted or marked.")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Save Progress:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Save the changes."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: A confirmation message should indicate that the changes were saved successfully.")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Turn On the Mirror:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Walk up to the mirror and turn it on."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror should power up without issues.")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},"Observe Mirror Reflection:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Observe the mirror to see if the custom widget is reflected."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The selected stock-related widget should be visible in the specified sub-profile and position in the mirror.")),(0,r.kt)("h2",{id:"use-case-2---custom-alerts"},"Use Case 2 - Custom Alerts"),(0,r.kt)("h1",{id:"test-scenario"},"Test Scenario:"),(0,r.kt)("p",null,"The user wants to view a custom widget on their current mirror layout so that they can view current stock quotes when they look at the mirror in the morning."),(0,r.kt)("h1",{id:"test-steps-1"},"Test steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open Companion App and navigate to reminder Section:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Open the companion app and Navigate to the Reminder section of the app"),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The app interface should load successfully, and the reminder section should be accessible")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Create New Reminder:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Press the New Reminder button."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: A new reminder creation interface should appear.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Enter Reminder Title:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Click on the title field and give the reminder a title."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The title should be entered, and there should be an option for a default value.")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Set Reminder Date and Time:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Click on the time field to input the date and time for the reminder."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The user should be able to set the date and time for the reminder.")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Save Reminder:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Save the progress."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: A confirmation message should indicate that the reminder has been set.")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Trigger Reminder Alert: ")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Simulate the passage of time until the reminder should trigger."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror should turn on when the reminder time matches the current time.")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},"Display Reminder Alert:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Wait for the mirror to display the reminder alert."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror screen should display the title, time, and date of the reminder for 10 seconds, accompanied by a soft sound")),(0,r.kt)("h2",{id:"use-case-3---sub-profiles"},"Use Case 3 - Sub-Profiles"),(0,r.kt)("h1",{id:"test-scenario-1"},"Test Scenario:"),(0,r.kt)("p",null,"A user wants to create a sub-profile for someone else who also uses the mirror at 5 p.m. on Sundays."),(0,r.kt)("h1",{id:"test-steps-2"},"Test steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open Companion App and navigate to Sub-Profile Section:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Open the companion app and navigate to the Sub-Profile section of the app."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The app interface should load successfully, and the Sub-Profile section should be accessible")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Create Sub-Profile:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Click on the Create Sub-Profile button."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: A new sub-profile creation interface should appear.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Enter Sub-Profile Name:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Click on the title field and give the sub-profile a name."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The sub-profile should be named, and there may be a default value.")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Customize Mirror Layout:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Add and customize elements on the mirror layout of the new sub-profile."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror layout should reflect the customization made for the sub-profile.")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Set Scheduled Switching:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Test Step: Input "Sunday" and "5:00 PM" into the Scheduled Switching field.'),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The sub-profile is scheduled to switch at 5:00 PM on Sundays.")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Save Progress:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Save the progress."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: A confirmation message should indicate that the sub-profile has been created and configured.")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},"View Sub-Profile on Mirror:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: Simulate the passage of time until Sunday 5:00 PM."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror should turn on when the system time matches Sunday at 5:00 PM."),(0,r.kt)("li",{parentName:"ul"},"Test Step: Observe the mirror to view the sub-profile."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The created sub-profile should be displayed on the mirror.")),(0,r.kt)("h2",{id:"use-case-4---heightweight-tracking"},"Use Case 4 - Height/Weight Tracking"),(0,r.kt)("h1",{id:"test-scenario-2"},"Test Scenario:"),(0,r.kt)("p",null,"The user wants to set a weight goal from scratch and track their height and weight so they will have an easy way to access the knowledge needed to work towards their ideal weight."),(0,r.kt)("h1",{id:"test-steps-3"},"Test Steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open Companion App and navigate to Health Section:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User opens the companion app and navigates to the health section of the app."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The app interface loads successfully, and the health section is accessible, showing various health-related features.")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Add Weight Goal:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Test Step: User presses the "Add Weight Goal" button.'),(0,r.kt)("li",{parentName:"ul"},"Expected Result: A new interface for setting a weight goal is displayed.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Input Desired Weight:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User inputs their desired weight."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The desired weight is entered into the system.")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Input Height and Weight:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User inputs their current height and weight."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The height and weight values are saved for tracking.")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Save Progress:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User saves their progress."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: A confirmation message indicates that the weight goal and initial data have been saved.")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Update Height and Weight:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User updates their height and weight when desired."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The new height and weight values are successfully updated.")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},"Add Health Widget to Sub-Profile:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User adds the built-in health widget to their sub-profile."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The health widget is displayed on the sub-profile's layout.")),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},"View Weight Goal and History:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User views their weight goal and weight history using the health widget."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The weight goal and historical weight data are accurately displayed on the widget.")),(0,r.kt)("h2",{id:"use-case-5---rainy-day-fit"},"Use Case 5 - Rainy Day Fit\u200b"),(0,r.kt)("h1",{id:"test-scenario-3"},"Test Scenario:"),(0,r.kt)("p",null,"A user that wants to be informed on what to wear throughout the day as they are rushing to get ready to leave the house for work."),(0,r.kt)("h1",{id:"test-steps-4"},"Test Steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Morning Routine in Front of the Mirror:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User stands in front of the mirror during their morning routine."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror's camera detects the user's presence.")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Camera Activation:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: The camera activation turns on the screen display behind the 2-way mirror."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror screen is activated, becoming visible to the user.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Weather Widget Display:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: The user sees a heavy rain forecast displayed by the weather widget on the mirror."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: Despite the current clear weather, the weather widget accurately reflects the afternoon forecast, providing information on heavy rain.")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"User Takes Precautions:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: The user, informed by the weather forecast, decides to grab their raincoat and umbrella."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The user is well-prepared for the forecasted heavy rain, avoiding discomfort during their day.")),(0,r.kt)("h2",{id:"use-case-6---to-do-list"},"Use Case 6 - To-do List"),(0,r.kt)("h1",{id:"test-scenario-4"},"Test Scenario:"),(0,r.kt)("p",null,"A user that has a busy day full of important tasks to do wants to reference his Todo list on the cloud when they\u2019re at home."),(0,r.kt)("h1",{id:"test-steps-5"},"Test Steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open Smart Mirror Companion App:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User opens the smart mirror companion app."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The app interface loads successfully.")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Add Important Task:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User adds an important task to check in with a family member weekly after work."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The task is successfully added to the user's Todo list on the cloud.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"View Mirror and Call Family Member:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User arrives home, looks at the smart mirror, and sees a reminder for the task to check in with the family member."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror displays the reminder for the added task."),(0,r.kt)("li",{parentName:"ul"},"Test Step: User is reminded by the mirror and decides to call their family member."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: User successfully calls to check in with the family member.")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Check Off Task in PWA:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User opens the PWA associated with the Todo list on the cloud."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The added task is visible, and the user can mark it as completed."),(0,r.kt)("li",{parentName:"ul"},'Test Step: User marks the task "Check in with family member weekly after work" as completed.'),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The task is successfully marked as completed in the PWA.")),(0,r.kt)("h2",{id:"use-case-7---scheduling-assistant"},"Use Case 7 - Scheduling Assistant"),(0,r.kt)("h1",{id:"test-scenario-5"},"Test Scenario:"),(0,r.kt)("p",null,"A user with a busy schedule of appointments at their workshop wants to efficiently view and manage their appointments using the smart mirror."),(0,r.kt)("h1",{id:"test-steps-6"},"Test Steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Enter Workshop and Activate Mirror:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User steps in front of their workshop mirror."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror's camera detects the user, activating the screen display behind the 2-way mirror.")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"View Calendar Display Widget:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User glances at the calendar display widget on the mirror."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror displays the upcoming appointments, and the user sees that their next appointment is scheduled in 20 minutes.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Prepare for Next Appointment:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User gets ready for their upcoming appointment based on the information from the calendar display."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The user is well-prepared for their next appointment.")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Mark Follow-Up Appointment in PWA:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: During the appointment, the client requests a follow-up next month."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The user decides to mark the follow-up appointment in the associated PWA (Progressive Web App).")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Update Google Calendar:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: User opens their Google Calendar app and adds the information for the follow-up appointment."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The follow-up appointment is successfully added to the user's Google Calendar.")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Submit Event to Mirror:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Test Step: User clicks "submit" in the PWA to sync the follow-up event with their smart mirror.'),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The event information is submitted and synchronized with the smart mirror.")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},"View Event on Mirror Day of the Appointment:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Step: The day of the follow-up appointment arrives, and the user checks the mirror."),(0,r.kt)("li",{parentName:"ul"},"Expected Result: The mirror displays the event information for the follow-up appointment scheduled for that day.")))}d.isMDXComponent=!0}}]);