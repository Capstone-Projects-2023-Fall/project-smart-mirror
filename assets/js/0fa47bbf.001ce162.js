"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6726],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=c(n),m=a,k=s["".concat(p,".").concat(m)]||s[m]||d[m]||i;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[s]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},931:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={},l="Weather Class API Documentation",o={unversionedId:"api-specification/weather-api",id:"api-specification/weather-api",title:"Weather Class API Documentation",description:"Purpose:",source:"@site/docs/api-specification/weather-api.md",sourceDirName:"api-specification",slug:"/api-specification/weather-api",permalink:"/project-smart-mirror/docs/api-specification/weather-api",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-smart-mirror/edit/main/documentation/docs/api-specification/weather-api.md",tags:[],version:"current",lastUpdatedBy:"tonytran40",frontMatter:{},sidebar:"docsSidebar",previous:{title:"System-Core",permalink:"/project-smart-mirror/docs/api-specification/systemcore-api"},next:{title:"Test Procedures",permalink:"/project-smart-mirror/docs/category/test-procedures"}},p={},c=[{value:"<code>Weather</code> Class",id:"weather-class",level:3},{value:"<code>SetLocation(zipCode: str)</code>",id:"setlocationzipcode-str",level:4},{value:"<code>GetCurrentForecast() -&gt; dict</code>",id:"getcurrentforecast---dict",level:4},{value:"<code>GetDailyForecast() -&gt; dict</code>",id:"getdailyforecast---dict",level:4},{value:"<code>GetWeeklyForecast() -&gt; dict</code>",id:"getweeklyforecast---dict",level:4},{value:"<code>GetWeatherAlerts() -&gt; list</code>",id:"getweatheralerts---list",level:4},{value:"<code>GetAirQuality() -&gt; str</code>",id:"getairquality---str",level:4},{value:"<code>GetWindSpeed() -&gt; float</code>",id:"getwindspeed---float",level:4},{value:"<code>GetWeatherIcon() -&gt; str</code>",id:"getweathericon---str",level:4},{value:"<code>GetDateTime() -&gt; str</code>",id:"getdatetime---str",level:4},{value:"<code>GetHumidity() -&gt; int</code>",id:"gethumidity---int",level:4},{value:"<code>RecommendOutfit() -&gt; str</code>",id:"recommendoutfit---str",level:4}],u={toc:c};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"weather-class-api-documentation"},"Weather Class API Documentation"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"Weather")," class provides functionality to retrieve weather-related information for a specific location."),(0,a.kt)("h3",{id:"weather-class"},(0,a.kt)("inlineCode",{parentName:"h3"},"Weather")," Class"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Data Fields:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"zipCode")," (str): The ZIP code for the location."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"currentTemperature")," (float): The current temperature at the specified location."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"currentPrecipitation"),' (str): The current precipitation status (e.g., "Rain," "Snow," "Clear," etc.).'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"currentAirQuality")," (str): The current air quality index (AQI) at the specified location.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Methods:")),(0,a.kt)("h4",{id:"setlocationzipcode-str"},(0,a.kt)("inlineCode",{parentName:"h4"},"SetLocation(zipCode: str)")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nSet the location for which weather information will be fetched."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"zipCode")," (str): The ZIP code for the new location.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Pre-conditions:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"zipCode")," must be a valid ZIP code.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Post-conditions:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The location is updated to the new ZIP code.")),(0,a.kt)("h4",{id:"getcurrentforecast---dict"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetCurrentForecast() -> dict")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nFetch and return the current weather conditions for the specified location."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dict"),": A dictionary containing the current weather data.")),(0,a.kt)("h4",{id:"getdailyforecast---dict"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetDailyForecast() -> dict")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nFetch and return the daily weather forecast for the specified location."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dict"),": A dictionary containing the daily weather forecast data.")),(0,a.kt)("h4",{id:"getweeklyforecast---dict"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetWeeklyForecast() -> dict")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nFetch and return the weekly weather forecast for the specified location."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dict"),": A dictionary containing the weekly weather forecast data.")),(0,a.kt)("h4",{id:"getweatheralerts---list"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetWeatherAlerts() -> list")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nRetrieve a list of weather alerts for the specified location."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list"),": A list of weather alerts.")),(0,a.kt)("h4",{id:"getairquality---str"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetAirQuality() -> str")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nRetrieve the current air quality index (AQI) at the specified location."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"str"),": The current air quality index.")),(0,a.kt)("h4",{id:"getwindspeed---float"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetWindSpeed() -> float")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nRetrieve the current wind speed at the specified location."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"float"),": The current wind speed in meters per second (m/s).")),(0,a.kt)("h4",{id:"getweathericon---str"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetWeatherIcon() -> str")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nRetrieve the URL of the weather icon representing the current weather conditions."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"str"),": The URL of the weather icon.")),(0,a.kt)("h4",{id:"getdatetime---str"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetDateTime() -> str")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nRetrieve the current date and time at the specified location."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"str"),": The current date and time.")),(0,a.kt)("h4",{id:"gethumidity---int"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetHumidity() -> int")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nRetrieve the current humidity level at the specified location."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"int"),": The current humidity level as a percentage.")),(0,a.kt)("h4",{id:"recommendoutfit---str"},(0,a.kt)("inlineCode",{parentName:"h4"},"RecommendOutfit() -> str")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Purpose:"),"\nGenerate a clothing outfit recommendation based on the current weather conditions."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Value:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"str"),": A string containing the outfit recommendation.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Exceptions Thrown:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WeatherDataUnavailableError"),": Raised if weather data cannot be fetched."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"OutfitRecommendationError"),": Raised if an outfit recommendation cannot be generated.")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Note: The exceptions mentioned above should be handled with meaningful error messages for the user.")))}s.isMDXComponent=!0}}]);